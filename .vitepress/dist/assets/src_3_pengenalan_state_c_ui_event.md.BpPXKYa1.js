import{_ as s,c as i,a2 as n,o as e}from"./chunks/framework.6x3wfQve.js";const E=JSON.parse('{"title":"UI Events dalam Jetpack Compose","description":"","frontmatter":{"next":{"text":"Setup Navigation","link":"https://raion-academy-2024.vercel.app/src/4_pengenalan_navigation/a_setup"}},"headers":[],"relativePath":"src/3_pengenalan_state/c_ui_event.md","filePath":"src/3_pengenalan_state/c_ui_event.md"}'),t={name:"src/3_pengenalan_state/c_ui_event.md"};function l(p,a,k,h,r,g){return e(),i("div",null,a[0]||(a[0]=[n(`<h1 id="ui-events-dalam-jetpack-compose" tabindex="-1">UI Events dalam Jetpack Compose <a class="header-anchor" href="#ui-events-dalam-jetpack-compose" aria-label="Permalink to &quot;UI Events dalam Jetpack Compose&quot;">​</a></h1><h2 id="pengertian-ui-events" tabindex="-1">Pengertian UI Events <a class="header-anchor" href="#pengertian-ui-events" aria-label="Permalink to &quot;Pengertian UI Events&quot;">​</a></h2><p>UI Events dalam Jetpack Compose merujuk pada interaksi pengguna dengan antarmuka pengguna (UI), seperti klik tombol, perubahan teks, atau penggeseran slider. Mengelola dan merespons event ini adalah bagian penting dalam pengembangan aplikasi untuk memastikan aplikasi berfungsi dengan baik dan memberikan pengalaman pengguna yang responsif.</p><h2 id="jenis-ui-events" tabindex="-1">Jenis UI Events <a class="header-anchor" href="#jenis-ui-events" aria-label="Permalink to &quot;Jenis UI Events&quot;">​</a></h2><p>Beberapa jenis UI Events yang umum dalam Jetpack Compose termasuk:</p><ul><li><strong>Click Events</strong>: Merespons klik pengguna pada elemen UI, seperti tombol atau item daftar.</li><li><strong>Text Change Events</strong>: Merespons perubahan teks dalam elemen input seperti <code>TextField</code>.</li><li><strong>Value Change Events</strong>: Merespons perubahan nilai pada elemen interaktif seperti slider atau switch.</li></ul><h2 id="mengelola-ui-events" tabindex="-1">Mengelola UI Events <a class="header-anchor" href="#mengelola-ui-events" aria-label="Permalink to &quot;Mengelola UI Events&quot;">​</a></h2><p>Dalam Jetpack Compose, pengelolaan UI Events sering dilakukan dengan menggunakan lambdas (fungsi anonim) yang ditetapkan pada parameter event dari elemen UI. Ketika event terjadi, lambda ini akan dipanggil, dan Anda dapat mengeksekusi logika yang sesuai untuk merespons interaksi pengguna.</p><h2 id="contoh-penggunaan-ui-events" tabindex="-1">Contoh Penggunaan UI Events <a class="header-anchor" href="#contoh-penggunaan-ui-events" aria-label="Permalink to &quot;Contoh Penggunaan UI Events&quot;">​</a></h2><p>Berikut adalah contoh kode yang menunjukkan pengelolaan UI Events dengan tombol dan input teks:</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EventExample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // State untuk menyimpan teks yang dimasukkan pengguna</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inputText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // State untuk menyimpan jumlah klik tombol</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> clickCount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mutableStateOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // TextField untuk menerima input dari pengguna</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    TextField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inputText.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        onValueChange </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { newText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inputText.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newText }, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Mengelola perubahan teks</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        label </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Enter some text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Tombol untuk meningkatkan jumlah klik</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { clickCount.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Clicked \${clickCount.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">value</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} times&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Menampilkan jumlah klik</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,11)]))}const o=s(t,[["render",l]]);export{E as __pageData,o as default};
