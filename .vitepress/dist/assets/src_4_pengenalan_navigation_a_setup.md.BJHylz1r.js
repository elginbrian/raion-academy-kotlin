import{_ as i,c as n,j as a,a as e,a2 as t,o as l}from"./chunks/framework.6x3wfQve.js";const u=JSON.parse('{"title":"Setup Navigation dalam Jetpack Compose","description":"","frontmatter":{"next":{"text":"Passing Data","link":"./b_passing_data"}},"headers":[],"relativePath":"src/4_pengenalan_navigation/a_setup.md","filePath":"src/4_pengenalan_navigation/a_setup.md"}'),p={name:"src/4_pengenalan_navigation/a_setup.md"};function k(h,s,r,o,g,d){return l(),n("div",null,s[0]||(s[0]=[a("h1",{id:"setup-navigation-dalam-jetpack-compose",tabindex:"-1"},[e("Setup Navigation dalam Jetpack Compose "),a("a",{class:"header-anchor",href:"#setup-navigation-dalam-jetpack-compose","aria-label":'Permalink to "Setup Navigation dalam Jetpack Compose"'},"​")],-1),a("br",null,null,-1),a("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/FIEnIBq7Ups",frameborder:"0",allowfullscreen:""},null,-1),t(`<h2 id="pengertian-navigation" tabindex="-1">Pengertian Navigation <a class="header-anchor" href="#pengertian-navigation" aria-label="Permalink to &quot;Pengertian Navigation&quot;">​</a></h2><p>Navigation dalam Jetpack Compose adalah mekanisme yang memungkinkan pengguna berpindah antara berbagai layar (screens) dalam aplikasi. Pengelolaan navigasi yang baik sangat penting untuk pengalaman pengguna yang intuitif dan lancar. Jetpack Compose menyediakan pustaka navigasi yang mudah digunakan dan fleksibel, memungkinkan pengembang untuk mengatur alur navigasi dengan cara yang deklaratif.</p><h2 id="komponen-utama-dalam-navigasi" tabindex="-1">Komponen Utama dalam Navigasi <a class="header-anchor" href="#komponen-utama-dalam-navigasi" aria-label="Permalink to &quot;Komponen Utama dalam Navigasi&quot;">​</a></h2><p>Beberapa komponen utama yang perlu dipahami saat mengatur navigasi di Jetpack Compose meliputi:</p><ul><li><p><strong>NavHost</strong>: Komponen ini bertanggung jawab untuk menampung semua destinasi navigasi. NavHost menentukan destinasi mana yang harus ditampilkan berdasarkan status navigasi saat ini.</p></li><li><p><strong>NavController</strong>: Objek ini mengelola navigasi di aplikasi. NavController memungkinkan pengembang untuk mengarahkan pengguna ke destinasi baru, kembali ke destinasi sebelumnya, dan mengelola kembali tumpukan navigasi.</p></li><li><p><strong>Destinations</strong>: Destinasi adalah layar atau komponen yang dapat dinavigasi oleh pengguna. Setiap destinasi diidentifikasi dengan string unik yang biasanya berupa nama layar.</p></li></ul><h2 id="contoh-kasus-penggunaan" tabindex="-1">Contoh Kasus Penggunaan <a class="header-anchor" href="#contoh-kasus-penggunaan" aria-label="Permalink to &quot;Contoh Kasus Penggunaan&quot;">​</a></h2><p>Pengaturan navigasi sederhana dapat dilakukan dengan membuat beberapa layar dan menggunakan <code>NavController</code> untuk berpindah di antara mereka. Misalnya, Anda bisa memiliki dua layar: layar pertama dengan tombol yang, ketika diklik, akan membawa pengguna ke layar kedua. Layar kedua juga bisa memiliki tombol untuk kembali ke layar pertama.</p><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// NavHost untuk mengatur navigasi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Navigation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> navController </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rememberNavController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    NavHost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(navController, startDestination </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;first_screen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        composable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;first_screen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FirstScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(navController) }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        composable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;second_screen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SecondScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(navController) }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Layar pertama</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FirstScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(navController: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NavController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { navController.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">navigate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;second_screen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Go to Second Screen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Layar kedua</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@Composable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SecondScreen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(navController: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NavController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(onClick </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { navController.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">popBackStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() }) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Back to First Screen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,8)]))}const m=i(p,[["render",k]]);export{u as __pageData,m as default};
